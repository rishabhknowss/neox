{"version":3,"file":"index.es.js","sources":["../../../node_modules/multiformats/esm/vendor/base-x.js","../../../node_modules/multiformats/esm/src/bytes.js","../../../node_modules/multiformats/esm/src/bases/base.js","../../../node_modules/multiformats/esm/src/bases/identity.js","../../../node_modules/multiformats/esm/src/bases/base2.js","../../../node_modules/multiformats/esm/src/bases/base8.js","../../../node_modules/multiformats/esm/src/bases/base10.js","../../../node_modules/multiformats/esm/src/bases/base16.js","../../../node_modules/multiformats/esm/src/bases/base32.js","../../../node_modules/multiformats/esm/src/bases/base36.js","../../../node_modules/multiformats/esm/src/bases/base58.js","../../../node_modules/multiformats/esm/src/bases/base64.js","../../../node_modules/multiformats/esm/src/bases/base256emoji.js","../../../node_modules/multiformats/esm/vendor/varint.js","../../../node_modules/multiformats/esm/src/varint.js","../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../node_modules/multiformats/esm/src/codecs/json.js","../../../node_modules/multiformats/esm/src/basics.js","../node_modules/uint8arrays/esm/src/alloc.js","../node_modules/uint8arrays/esm/src/util/bases.js","../node_modules/uint8arrays/esm/src/from-string.js","../src/constants/core.ts","../src/constants/crypto.ts","../src/constants/keychain.ts","../src/constants/messages.ts","../src/constants/publisher.ts","../src/constants/relayer.ts","../src/constants/store.ts","../src/constants/subscriber.ts","../src/constants/pairing.ts","../src/constants/history.ts","../src/constants/expirer.ts","../src/constants/verify.ts","../src/constants/echo.ts","../src/controllers/keychain.ts","../src/controllers/crypto.ts","../src/controllers/messages.ts","../src/controllers/publisher.ts","../src/controllers/topicmap.ts","../src/controllers/subscriber.ts","../src/controllers/relayer.ts","../src/controllers/store.ts","../src/controllers/pairing.ts","../src/controllers/history.ts","../src/controllers/expirer.ts","../src/controllers/verify.ts","../src/controllers/echo.ts","../src/core.ts","../src/index.ts"],"sourcesContent":["function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","export const CORE_PROTOCOL = \"wc\";\nexport const CORE_VERSION = 2;\nexport const CORE_CONTEXT = \"core\";\n\nexport const CORE_STORAGE_PREFIX = `${CORE_PROTOCOL}@${CORE_VERSION}:${CORE_CONTEXT}:`;\n\nexport const CORE_DEFAULT = {\n  name: CORE_CONTEXT,\n  logger: \"error\",\n};\n\nexport const CORE_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const CRYPTO_CONTEXT = \"crypto\";\n\nexport const CRYPTO_CLIENT_SEED = \"client_ed25519_seed\";\n\nexport const CRYPTO_JWT_TTL = ONE_DAY;\n","export const KEYCHAIN_CONTEXT = \"keychain\";\n\nexport const KEYCHAIN_STORAGE_VERSION = \"0.3\";\n","export const MESSAGES_CONTEXT = \"messages\";\n\nexport const MESSAGES_STORAGE_VERSION = \"0.3\";\n","import { SIX_HOURS } from \"@walletconnect/time\";\n\nexport const PUBLISHER_DEFAULT_TTL = SIX_HOURS;\n\nexport const PUBLISHER_CONTEXT = \"publisher\";\n","import { ONE_SECOND } from \"@walletconnect/time\";\n\nexport const RELAYER_DEFAULT_PROTOCOL = \"irn\";\n\nexport const RELAYER_DEFAULT_LOGGER = \"error\";\n\nexport const RELAYER_DEFAULT_RELAY_URL = \"wss://relay.walletconnect.com\";\nexport const RELAYER_FAILOVER_RELAY_URL = \"wss://relay.walletconnect.org\";\n\nexport const RELAYER_CONTEXT = \"relayer\";\n\nexport const RELAYER_EVENTS = {\n  message: \"relayer_message\",\n  message_ack: \"relayer_message_ack\",\n  connect: \"relayer_connect\",\n  disconnect: \"relayer_disconnect\",\n  error: \"relayer_error\",\n  connection_stalled: \"relayer_connection_stalled\",\n  transport_closed: \"relayer_transport_closed\",\n  publish: \"relayer_publish\",\n};\n\nexport const RELAYER_SUBSCRIBER_SUFFIX = \"_subscription\";\n\nexport const RELAYER_PROVIDER_EVENTS = {\n  payload: \"payload\",\n  connect: \"connect\",\n  disconnect: \"disconnect\",\n  error: \"error\",\n};\n\nexport const RELAYER_RECONNECT_TIMEOUT = ONE_SECOND;\n\nexport const RELAYER_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\n// Updated automatically via `new-version` npm script.\n\nexport const RELAYER_SDK_VERSION = \"2.13.0\";\n\n// delay to wait before closing the transport connection after init if not active\nexport const RELAYER_TRANSPORT_CUTOFF = 10_000;\n","export const STORE_STORAGE_VERSION = \"0.3\";\n\nexport const WALLETCONNECT_CLIENT_ID = \"WALLETCONNECT_CLIENT_ID\";\n","import { THIRTY_DAYS, FIVE_SECONDS } from \"@walletconnect/time\";\n\nexport const SUBSCRIBER_EVENTS = {\n  created: \"subscription_created\",\n  deleted: \"subscription_deleted\",\n  expired: \"subscription_expired\",\n  disabled: \"subscription_disabled\",\n  sync: \"subscription_sync\",\n  resubscribed: \"subscription_resubscribed\",\n};\n\nexport const SUBSCRIBER_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const SUBSCRIBER_CONTEXT = \"subscription\";\n\nexport const SUBSCRIBER_STORAGE_VERSION = \"0.3\";\n\nexport const PENDING_SUB_RESOLUTION_TIMEOUT = FIVE_SECONDS * 1000;\n","import { THIRTY_DAYS, ONE_DAY, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { RelayerTypes, PairingJsonRpcTypes } from \"@walletconnect/types\";\n\nexport const PAIRING_CONTEXT = \"pairing\";\n\nexport const PAIRING_STORAGE_VERSION = \"0.3\";\n\nexport const PAIRING_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const PAIRING_RPC_OPTS: Record<\n  PairingJsonRpcTypes.WcMethod | \"unregistered_method\",\n  {\n    req: RelayerTypes.PublishOptions;\n    res: RelayerTypes.PublishOptions;\n  }\n> = {\n  wc_pairingDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1000,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1001,\n    },\n  },\n  wc_pairingPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1002,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1003,\n    },\n  },\n  unregistered_method: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n  },\n};\n\nexport const PAIRING_EVENTS = {\n  create: \"pairing_create\",\n  expire: \"pairing_expire\",\n  delete: \"pairing_delete\",\n  ping: \"pairing_ping\",\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const EXPIRER_CONTEXT = \"expirer\";\n\nexport const EXPIRER_EVENTS = {\n  created: \"expirer_created\",\n  deleted: \"expirer_deleted\",\n  expired: \"expirer_expired\",\n  sync: \"expirer_sync\",\n};\n\nexport const EXPIRER_STORAGE_VERSION = \"0.3\";\n\nexport const EXPIRER_DEFAULT_TTL = ONE_DAY;\n","export const VERIFY_CONTEXT = \"verify-api\";\n\nexport const VERIFY_SERVER = \"https://verify.walletconnect.com\";\n\nexport const VERIFY_FALLBACK_SERVER = \"https://verify.walletconnect.org\";\n\nexport const TRUSTED_VERIFY_URLS = [VERIFY_SERVER, VERIFY_FALLBACK_SERVER];\n","export const ECHO_CONTEXT = \"echo\";\n\nexport const ECHO_URL = \"https://echo.walletconnect.com\";\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IKeyChain } from \"@walletconnect/types\";\nimport { getInternalError, mapToObj, objToMap } from \"@walletconnect/utils\";\n\nimport { CORE_STORAGE_PREFIX, KEYCHAIN_CONTEXT, KEYCHAIN_STORAGE_VERSION } from \"../constants\";\n\nexport class KeyChain implements IKeyChain {\n  public keychain = new Map<string, string>();\n  public name = KEYCHAIN_CONTEXT;\n  public version = KEYCHAIN_STORAGE_VERSION;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IKeyChain[\"init\"] = async () => {\n    if (!this.initialized) {\n      const keychain = await this.getKeyChain();\n      if (typeof keychain !== \"undefined\") {\n        this.keychain = keychain;\n      }\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  public has: IKeyChain[\"has\"] = (tag) => {\n    this.isInitialized();\n    return this.keychain.has(tag);\n  };\n\n  public set: IKeyChain[\"set\"] = async (tag, key) => {\n    this.isInitialized();\n    this.keychain.set(tag, key);\n    await this.persist();\n  };\n\n  public get: IKeyChain[\"get\"] = (tag) => {\n    this.isInitialized();\n    const key = this.keychain.get(tag);\n    if (typeof key === \"undefined\") {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${tag}`);\n      throw new Error(message);\n    }\n    return key;\n  };\n\n  public del: IKeyChain[\"del\"] = async (tag) => {\n    this.isInitialized();\n    this.keychain.delete(tag);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setKeyChain(keychain: Map<string, string>) {\n    await this.core.storage.setItem<Record<string, string>>(this.storageKey, mapToObj(keychain));\n  }\n\n  private async getKeyChain() {\n    const keychain = await this.core.storage.getItem<Record<string, string>>(this.storageKey);\n    return typeof keychain !== \"undefined\" ? objToMap(keychain) : undefined;\n  }\n\n  private async persist() {\n    await this.setKeyChain(this.keychain);\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nimport { ICore, ICrypto, IKeyChain } from \"@walletconnect/types\";\nimport * as relayAuth from \"@walletconnect/relay-auth\";\nimport { fromString } from \"uint8arrays/from-string\";\nimport {\n  decrypt,\n  deriveSymKey,\n  encrypt,\n  generateKeyPair as generateKeyPairUtil,\n  hashKey,\n  getInternalError,\n  generateRandomBytes32,\n  validateEncoding,\n  validateDecoding,\n  isTypeOneEnvelope,\n  deserialize,\n  decodeTypeByte,\n  BASE16,\n} from \"@walletconnect/utils\";\nimport { toString } from \"uint8arrays\";\n\nimport { CRYPTO_CONTEXT, CRYPTO_CLIENT_SEED, CRYPTO_JWT_TTL } from \"../constants\";\nimport { KeyChain } from \"./keychain\";\n\nexport class Crypto implements ICrypto {\n  public name = CRYPTO_CONTEXT;\n  public keychain: ICrypto[\"keychain\"];\n\n  private initialized = false;\n\n  constructor(public core: ICore, public logger: Logger, keychain?: IKeyChain) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n    this.keychain = keychain || new KeyChain(this.core, this.logger);\n  }\n\n  public init: ICrypto[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.keychain.init();\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public hasKeys: ICrypto[\"hasKeys\"] = (tag) => {\n    this.isInitialized();\n    return this.keychain.has(tag);\n  };\n\n  public getClientId: ICrypto[\"getClientId\"] = async () => {\n    this.isInitialized();\n    const seed = await this.getClientSeed();\n    const keyPair = relayAuth.generateKeyPair(seed);\n    const clientId = relayAuth.encodeIss(keyPair.publicKey);\n    return clientId;\n  };\n\n  public generateKeyPair: ICrypto[\"generateKeyPair\"] = () => {\n    this.isInitialized();\n    const keyPair = generateKeyPairUtil();\n    return this.setPrivateKey(keyPair.publicKey, keyPair.privateKey);\n  };\n\n  public signJWT: ICrypto[\"signJWT\"] = async (aud) => {\n    this.isInitialized();\n    const seed = await this.getClientSeed();\n    const keyPair = relayAuth.generateKeyPair(seed);\n    const sub = generateRandomBytes32();\n    const ttl = CRYPTO_JWT_TTL;\n    const jwt = await relayAuth.signJWT(sub, aud, ttl, keyPair);\n    return jwt;\n  };\n\n  public generateSharedKey: ICrypto[\"generateSharedKey\"] = (\n    selfPublicKey,\n    peerPublicKey,\n    overrideTopic,\n  ) => {\n    this.isInitialized();\n    const selfPrivateKey = this.getPrivateKey(selfPublicKey);\n    const symKey = deriveSymKey(selfPrivateKey, peerPublicKey);\n    return this.setSymKey(symKey, overrideTopic);\n  };\n\n  public setSymKey: ICrypto[\"setSymKey\"] = async (symKey, overrideTopic) => {\n    this.isInitialized();\n    const topic = overrideTopic || hashKey(symKey);\n    await this.keychain.set(topic, symKey);\n    return topic;\n  };\n\n  public deleteKeyPair: ICrypto[\"deleteKeyPair\"] = async (publicKey: string) => {\n    this.isInitialized();\n    await this.keychain.del(publicKey);\n  };\n\n  public deleteSymKey: ICrypto[\"deleteSymKey\"] = async (topic: string) => {\n    this.isInitialized();\n    await this.keychain.del(topic);\n  };\n\n  public encode: ICrypto[\"encode\"] = async (topic, payload, opts) => {\n    this.isInitialized();\n    const params = validateEncoding(opts);\n    const message = safeJsonStringify(payload);\n    if (isTypeOneEnvelope(params)) {\n      const selfPublicKey = params.senderPublicKey;\n      const peerPublicKey = params.receiverPublicKey;\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\n    }\n    const symKey = this.getSymKey(topic);\n    const { type, senderPublicKey } = params;\n    const result = encrypt({ type, symKey, message, senderPublicKey });\n    return result;\n  };\n\n  public decode: ICrypto[\"decode\"] = async (topic, encoded, opts) => {\n    this.isInitialized();\n    const params = validateDecoding(encoded, opts);\n    if (isTypeOneEnvelope(params)) {\n      const selfPublicKey = params.receiverPublicKey;\n      const peerPublicKey = params.senderPublicKey;\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\n    }\n    try {\n      const symKey = this.getSymKey(topic);\n      const message = decrypt({ symKey, encoded });\n      const payload = safeJsonParse(message);\n      return payload;\n    } catch (error) {\n      this.logger.error(\n        `Failed to decode message from topic: '${topic}', clientId: '${await this.getClientId()}'`,\n      );\n      this.logger.error(error);\n    }\n  };\n\n  public getPayloadType: ICrypto[\"getPayloadType\"] = (encoded) => {\n    const deserialized = deserialize(encoded);\n    return decodeTypeByte(deserialized.type);\n  };\n\n  public getPayloadSenderPublicKey: ICrypto[\"getPayloadSenderPublicKey\"] = (encoded) => {\n    const deserialized = deserialize(encoded);\n    return deserialized.senderPublicKey\n      ? toString(deserialized.senderPublicKey, BASE16)\n      : undefined;\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setPrivateKey(publicKey: string, privateKey: string): Promise<string> {\n    await this.keychain.set(publicKey, privateKey);\n    return publicKey;\n  }\n\n  private getPrivateKey(publicKey: string) {\n    const privateKey = this.keychain.get(publicKey);\n    return privateKey;\n  }\n\n  private async getClientSeed(): Promise<Uint8Array> {\n    let seed = \"\";\n    try {\n      seed = this.keychain.get(CRYPTO_CLIENT_SEED);\n    } catch {\n      seed = generateRandomBytes32();\n      await this.keychain.set(CRYPTO_CLIENT_SEED, seed);\n    }\n    return fromString(seed, \"base16\");\n  }\n\n  private getSymKey(topic: string) {\n    const symKey = this.keychain.get(topic);\n    return symKey;\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IMessageTracker, MessageRecord } from \"@walletconnect/types\";\nimport { hashMessage, mapToObj, objToMap, getInternalError } from \"@walletconnect/utils\";\nimport { CORE_STORAGE_PREFIX, MESSAGES_CONTEXT, MESSAGES_STORAGE_VERSION } from \"../constants\";\n\nexport class MessageTracker extends IMessageTracker {\n  public messages = new Map<string, MessageRecord>();\n  public name = MESSAGES_CONTEXT;\n  public version = MESSAGES_STORAGE_VERSION;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public logger: Logger, public core: ICore) {\n    super(logger, core);\n    this.logger = generateChildLogger(logger, this.name);\n    this.core = core;\n  }\n\n  public init: IMessageTracker[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      try {\n        const messages = await this.getRelayerMessages();\n        if (typeof messages !== \"undefined\") {\n          this.messages = messages;\n        }\n\n        this.logger.debug(`Successfully Restored records for ${this.name}`);\n        this.logger.trace({ type: \"method\", method: \"restore\", size: this.messages.size });\n      } catch (e) {\n        this.logger.debug(`Failed to Restore records for ${this.name}`);\n        this.logger.error(e as any);\n      } finally {\n        this.initialized = true;\n      }\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  public set: IMessageTracker[\"set\"] = async (topic, message) => {\n    this.isInitialized();\n    const hash = hashMessage(message);\n    let messages = this.messages.get(topic);\n    if (typeof messages === \"undefined\") {\n      messages = {};\n    }\n    if (typeof messages[hash] !== \"undefined\") {\n      return hash;\n    }\n    messages[hash] = message;\n    this.messages.set(topic, messages);\n    await this.persist();\n    return hash;\n  };\n\n  public get: IMessageTracker[\"get\"] = (topic) => {\n    this.isInitialized();\n    let messages = this.messages.get(topic);\n    if (typeof messages === \"undefined\") {\n      messages = {};\n    }\n    return messages;\n  };\n\n  public has: IMessageTracker[\"has\"] = (topic, message) => {\n    this.isInitialized();\n    const messages = this.get(topic);\n    const hash = hashMessage(message);\n    return typeof messages[hash] !== \"undefined\";\n  };\n\n  public del: IMessageTracker[\"del\"] = async (topic) => {\n    this.isInitialized();\n    this.messages.delete(topic);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setRelayerMessages(messages: Map<string, MessageRecord>): Promise<void> {\n    await this.core.storage.setItem<Record<string, MessageRecord>>(\n      this.storageKey,\n      mapToObj(messages),\n    );\n  }\n\n  private async getRelayerMessages(): Promise<Map<string, MessageRecord> | undefined> {\n    const messages = await this.core.storage.getItem<Record<string, MessageRecord>>(\n      this.storageKey,\n    );\n    return typeof messages !== \"undefined\" ? objToMap(messages) : undefined;\n  }\n\n  private async persist() {\n    await this.setRelayerMessages(this.messages);\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { JsonRpcPayload, RequestArguments } from \"@walletconnect/jsonrpc-types\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { IPublisher, IRelayer, PublisherTypes, RelayerTypes } from \"@walletconnect/types\";\nimport {\n  getRelayProtocolApi,\n  getRelayProtocolName,\n  isUndefined,\n  createExpiringPromise,\n} from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\n\nimport { PUBLISHER_CONTEXT, PUBLISHER_DEFAULT_TTL, RELAYER_EVENTS } from \"../constants\";\nimport { getBigIntRpcId } from \"@walletconnect/jsonrpc-utils\";\nimport { ONE_MINUTE, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\n\nexport class Publisher extends IPublisher {\n  public events = new EventEmitter();\n  public name = PUBLISHER_CONTEXT;\n  public queue = new Map<string, PublisherTypes.Params>();\n\n  private publishTimeout = toMiliseconds(ONE_MINUTE);\n  private failedPublishTimeout = toMiliseconds(ONE_SECOND);\n  private needsTransportRestart = false;\n\n  constructor(public relayer: IRelayer, public logger: Logger) {\n    super(relayer, logger);\n    this.relayer = relayer;\n    this.logger = generateChildLogger(logger, this.name);\n    this.registerEventListeners();\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public publish: IPublisher[\"publish\"] = async (topic, message, opts) => {\n    this.logger.debug(`Publishing Payload`);\n    this.logger.trace({ type: \"method\", method: \"publish\", params: { topic, message, opts } });\n\n    const ttl = opts?.ttl || PUBLISHER_DEFAULT_TTL;\n    const relay = getRelayProtocolName(opts);\n    const prompt = opts?.prompt || false;\n    const tag = opts?.tag || 0;\n    const id = opts?.id || (getBigIntRpcId().toString() as any);\n    const params = { topic, message, opts: { ttl, relay, prompt, tag, id } };\n    const failedPublishMessage = `Failed to publish payload, please try again. id:${id} tag:${tag}`;\n    const startPublish = Date.now();\n    let result;\n    let attempts = 1;\n\n    try {\n      /**\n       * Loop until the publish is successful or the timeout is reached\n       * The loop allows to retry to retry the publish in case of disconnect\n       */\n      while (result === undefined) {\n        // Terminate the publishing attempts if publisTimeout has been exceeded\n        if (Date.now() - startPublish > this.publishTimeout) {\n          throw new Error(failedPublishMessage);\n        }\n\n        this.logger.trace({ id, attempts }, `publisher.publish - attempt ${attempts}`);\n        const publish = await createExpiringPromise(\n          this.rpcPublish(topic, message, ttl, relay, prompt, tag, id).catch((e) =>\n            this.logger.warn(e),\n          ),\n          this.publishTimeout,\n          failedPublishMessage,\n        );\n        result = await publish;\n        attempts++;\n\n        if (!result) {\n          // small delay before retrying so we can limit retry to max 1 time per second\n          // if network is down `rpcPublish` will throw immediately\n          await new Promise((resolve) => setTimeout(resolve, this.failedPublishTimeout));\n        }\n      }\n      this.relayer.events.emit(RELAYER_EVENTS.publish, params);\n      this.logger.debug(`Successfully Published Payload`);\n      this.logger.trace({\n        type: \"method\",\n        method: \"publish\",\n        params: { id, topic, message, opts },\n      });\n    } catch (e) {\n      this.logger.debug(`Failed to Publish Payload`);\n      this.logger.error(e as any);\n      if (opts?.internal?.throwOnFailedPublish) {\n        throw e;\n      }\n      this.queue.set(id, params);\n    }\n  };\n\n  public on: IPublisher[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IPublisher[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IPublisher[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IPublisher[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private rpcPublish(\n    topic: string,\n    message: string,\n    ttl: number,\n    relay: RelayerTypes.ProtocolOptions,\n    prompt?: boolean,\n    tag?: number,\n    id?: number,\n  ) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.PublishParams> = {\n      method: api.publish,\n      params: {\n        topic,\n        message,\n        ttl,\n        prompt,\n        tag,\n      },\n      id,\n    };\n    if (isUndefined(request.params?.prompt)) delete request.params?.prompt;\n    if (isUndefined(request.params?.tag)) delete request.params?.tag;\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"message\", direction: \"outgoing\", request });\n    return this.relayer.request(request);\n  }\n\n  private removeRequestFromQueue(id: string) {\n    this.queue.delete(id);\n  }\n\n  private checkQueue() {\n    this.queue.forEach(async (params) => {\n      const { topic, message, opts } = params;\n      await this.publish(topic, message, opts);\n    });\n  }\n\n  private registerEventListeners() {\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\n      // restart the transport if needed\n      // queue will be processed on the next pulse\n      if (this.needsTransportRestart) {\n        this.needsTransportRestart = false;\n        this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n        return;\n      }\n      this.checkQueue();\n    });\n    this.relayer.on(RELAYER_EVENTS.message_ack, (event: JsonRpcPayload) => {\n      this.removeRequestFromQueue(event.id.toString());\n    });\n  }\n}\n","import { ISubscriberTopicMap } from \"@walletconnect/types\";\n\nexport class SubscriberTopicMap implements ISubscriberTopicMap {\n  public map = new Map<string, string[]>();\n\n  get topics(): string[] {\n    return Array.from(this.map.keys());\n  }\n\n  public set: ISubscriberTopicMap[\"set\"] = (topic, id) => {\n    const ids = this.get(topic);\n    if (this.exists(topic, id)) return;\n    this.map.set(topic, [...ids, id]);\n  };\n\n  public get: ISubscriberTopicMap[\"get\"] = (topic) => {\n    const ids = this.map.get(topic);\n    return ids || [];\n  };\n\n  public exists: ISubscriberTopicMap[\"exists\"] = (topic, id) => {\n    const ids = this.get(topic);\n    return ids.includes(id);\n  };\n\n  public delete: ISubscriberTopicMap[\"delete\"] = (topic, id) => {\n    if (typeof id === \"undefined\") {\n      this.map.delete(topic);\n      return;\n    }\n    if (!this.map.has(topic)) return;\n    const ids = this.get(topic);\n    if (!this.exists(topic, id)) return;\n    const remaining = ids.filter((x) => x !== id);\n    if (!remaining.length) {\n      this.map.delete(topic);\n      return;\n    }\n    this.map.set(topic, remaining);\n  };\n\n  public clear: ISubscriberTopicMap[\"clear\"] = () => {\n    this.map.clear();\n  };\n}\n","import { EventEmitter } from \"events\";\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { ErrorResponse, RequestArguments } from \"@walletconnect/jsonrpc-types\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { ONE_MINUTE, Watch, toMiliseconds } from \"@walletconnect/time\";\nimport {\n  IRelayer,\n  ISubscriber,\n  RelayerTypes,\n  SubscriberEvents,\n  SubscriberTypes,\n} from \"@walletconnect/types\";\nimport {\n  getSdkError,\n  getInternalError,\n  getRelayProtocolApi,\n  getRelayProtocolName,\n  createExpiringPromise,\n  hashMessage,\n  isValidArray,\n} from \"@walletconnect/utils\";\nimport {\n  CORE_STORAGE_PREFIX,\n  SUBSCRIBER_CONTEXT,\n  SUBSCRIBER_EVENTS,\n  SUBSCRIBER_STORAGE_VERSION,\n  PENDING_SUB_RESOLUTION_TIMEOUT,\n  RELAYER_EVENTS,\n} from \"../constants\";\nimport { SubscriberTopicMap } from \"./topicmap\";\n\nexport class Subscriber extends ISubscriber {\n  public subscriptions = new Map<string, SubscriberTypes.Active>();\n  public topicMap = new SubscriberTopicMap();\n  public events = new EventEmitter();\n  public name = SUBSCRIBER_CONTEXT;\n  public version = SUBSCRIBER_STORAGE_VERSION;\n  public pending = new Map<string, SubscriberTypes.Params>();\n\n  private cached: SubscriberTypes.Active[] = [];\n  private initialized = false;\n  private pendingSubscriptionWatchLabel = \"pending_sub_watch_label\";\n  private pollingInterval = 20;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n  private subscribeTimeout = toMiliseconds(ONE_MINUTE);\n  private restartInProgress = false;\n  private clientId: string;\n  private batchSubscribeTopicsLimit = 500;\n  private pendingBatchMessages: RelayerTypes.MessageEvent[] = [];\n\n  constructor(public relayer: IRelayer, public logger: Logger) {\n    super(relayer, logger);\n    this.relayer = relayer;\n    this.logger = generateChildLogger(logger, this.name);\n    this.clientId = \"\"; // assigned in init\n  }\n\n  public init: ISubscriber[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      this.registerEventListeners();\n      this.clientId = await this.relayer.core.crypto.getClientId();\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return (\n      this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name\n    );\n  }\n\n  get length() {\n    return this.subscriptions.size;\n  }\n\n  get ids() {\n    return Array.from(this.subscriptions.keys());\n  }\n\n  get values() {\n    return Array.from(this.subscriptions.values());\n  }\n\n  get topics() {\n    return this.topicMap.topics;\n  }\n\n  public subscribe: ISubscriber[\"subscribe\"] = async (topic, opts) => {\n    await this.restartToComplete();\n    this.isInitialized();\n    this.logger.debug(`Subscribing Topic`);\n    this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\n    try {\n      const relay = getRelayProtocolName(opts);\n      const params = { topic, relay };\n      this.pending.set(topic, params);\n      const id = await this.rpcSubscribe(topic, relay);\n      if (typeof id === \"string\") {\n        this.onSubscribe(id, params);\n        this.logger.debug(`Successfully Subscribed Topic`);\n        this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\n      }\n      return id;\n    } catch (e) {\n      this.logger.debug(`Failed to Subscribe Topic`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  };\n\n  public unsubscribe: ISubscriber[\"unsubscribe\"] = async (topic, opts) => {\n    await this.restartToComplete();\n    this.isInitialized();\n    if (typeof opts?.id !== \"undefined\") {\n      await this.unsubscribeById(topic, opts.id, opts);\n    } else {\n      await this.unsubscribeByTopic(topic, opts);\n    }\n  };\n\n  public isSubscribed: ISubscriber[\"isSubscribed\"] = async (topic: string) => {\n    // topic subscription is already resolved\n    if (this.topics.includes(topic)) return true;\n    const label = `${this.pendingSubscriptionWatchLabel}_${topic}`;\n    // wait for the subscription to resolve\n    const exists = await new Promise<boolean>((resolve, reject) => {\n      const watch = new Watch();\n      watch.start(label);\n      const interval = setInterval(() => {\n        if (!this.pending.has(topic) && this.topics.includes(topic)) {\n          clearInterval(interval);\n          watch.stop(label);\n          resolve(true);\n        }\n        if (watch.elapsed(label) >= PENDING_SUB_RESOLUTION_TIMEOUT) {\n          clearInterval(interval);\n          watch.stop(label);\n          reject(new Error(\"Subscription resolution timeout\"));\n        }\n      }, this.pollingInterval);\n    }).catch(() => false);\n    return exists;\n  };\n\n  public on: ISubscriber[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: ISubscriber[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: ISubscriber[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: ISubscriber[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  public start: ISubscriber[\"start\"] = async () => {\n    await this.onConnect();\n  };\n\n  public stop: ISubscriber[\"stop\"] = async () => {\n    await this.onDisconnect();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private hasSubscription(id: string, topic: string) {\n    let result = false;\n    try {\n      const subscription = this.getSubscription(id);\n      result = subscription.topic === topic;\n    } catch (e) {\n      // ignore error\n    }\n    return result;\n  }\n\n  private onEnable() {\n    this.cached = [];\n    this.initialized = true;\n  }\n\n  private onDisable() {\n    this.cached = this.values;\n    this.subscriptions.clear();\n    this.topicMap.clear();\n  }\n\n  private async unsubscribeByTopic(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    const ids = this.topicMap.get(topic);\n    await Promise.all(ids.map(async (id) => await this.unsubscribeById(topic, id, opts)));\n  }\n\n  private async unsubscribeById(topic: string, id: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    this.logger.debug(`Unsubscribing Topic`);\n    this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\n    try {\n      const relay = getRelayProtocolName(opts);\n      await this.rpcUnsubscribe(topic, id, relay);\n      const reason = getSdkError(\"USER_DISCONNECTED\", `${this.name}, ${topic}`);\n      await this.onUnsubscribe(topic, id, reason);\n      this.logger.debug(`Successfully Unsubscribed Topic`);\n      this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\n    } catch (e) {\n      this.logger.debug(`Failed to Unsubscribe Topic`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  }\n\n  private async rpcSubscribe(topic: string, relay: RelayerTypes.ProtocolOptions) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.SubscribeParams> = {\n      method: api.subscribe,\n      params: {\n        topic,\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    try {\n      const subscribe = await createExpiringPromise(\n        this.relayer.request(request).catch((e) => this.logger.warn(e)),\n        this.subscribeTimeout,\n      );\n      const result = await subscribe;\n      // return null to indicate that the subscription failed\n      return result ? hashMessage(topic + this.clientId) : null;\n    } catch (err) {\n      this.logger.debug(`Outgoing Relay Subscribe Payload stalled`);\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n    }\n    return null;\n  }\n\n  private async rpcBatchSubscribe(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n    const relay = subscriptions[0].relay;\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.BatchSubscribeParams> = {\n      method: api.batchSubscribe,\n      params: {\n        topics: subscriptions.map((s) => s.topic),\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    try {\n      const subscribe = await createExpiringPromise(\n        this.relayer.request(request).catch((e) => this.logger.warn(e)),\n        this.subscribeTimeout,\n      );\n      return await subscribe;\n    } catch (err) {\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n    }\n  }\n\n  private async rpcBatchFetchMessages(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n    const relay = subscriptions[0].relay;\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.BatchFetchMessagesParams> = {\n      method: api.batchFetchMessages,\n      params: {\n        topics: subscriptions.map((s) => s.topic),\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    let result;\n    try {\n      const fetchMessagesPromise = await createExpiringPromise(\n        this.relayer.request(request).catch((e) => this.logger.warn(e)),\n        this.subscribeTimeout,\n      );\n      result = (await fetchMessagesPromise) as {\n        messages: RelayerTypes.MessageEvent[];\n      };\n    } catch (err) {\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n    }\n    return result;\n  }\n\n  private rpcUnsubscribe(topic: string, id: string, relay: RelayerTypes.ProtocolOptions) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.UnsubscribeParams> = {\n      method: api.unsubscribe,\n      params: {\n        topic,\n        id,\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    return this.relayer.request(request);\n  }\n\n  private onSubscribe(id: string, params: SubscriberTypes.Params) {\n    this.setSubscription(id, { ...params, id });\n    this.pending.delete(params.topic);\n  }\n\n  private onBatchSubscribe(subscriptions: SubscriberTypes.Active[]) {\n    if (!subscriptions.length) return;\n    subscriptions.forEach((subscription) => {\n      this.setSubscription(subscription.id, { ...subscription });\n      this.pending.delete(subscription.topic);\n    });\n  }\n\n  private async onUnsubscribe(topic: string, id: string, reason: ErrorResponse) {\n    this.events.removeAllListeners(id);\n    if (this.hasSubscription(id, topic)) {\n      this.deleteSubscription(id, reason);\n    }\n    await this.relayer.messages.del(topic);\n  }\n\n  private async setRelayerSubscriptions(subscriptions: SubscriberTypes.Active[]) {\n    await this.relayer.core.storage.setItem<SubscriberTypes.Active[]>(\n      this.storageKey,\n      subscriptions,\n    );\n  }\n\n  private async getRelayerSubscriptions() {\n    const subscriptions = await this.relayer.core.storage.getItem<SubscriberTypes.Active[]>(\n      this.storageKey,\n    );\n    return subscriptions;\n  }\n\n  private setSubscription(id: string, subscription: SubscriberTypes.Active) {\n    this.logger.debug(`Setting subscription`);\n    this.logger.trace({ type: \"method\", method: \"setSubscription\", id, subscription });\n    this.addSubscription(id, subscription);\n  }\n\n  private addSubscription(id: string, subscription: SubscriberTypes.Active) {\n    this.subscriptions.set(id, { ...subscription });\n    this.topicMap.set(subscription.topic, id);\n    this.events.emit(SUBSCRIBER_EVENTS.created, subscription);\n  }\n\n  private getSubscription(id: string) {\n    this.logger.debug(`Getting subscription`);\n    this.logger.trace({ type: \"method\", method: \"getSubscription\", id });\n    const subscription = this.subscriptions.get(id);\n    if (!subscription) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return subscription;\n  }\n\n  private deleteSubscription(id: string, reason: ErrorResponse) {\n    this.logger.debug(`Deleting subscription`);\n    this.logger.trace({ type: \"method\", method: \"deleteSubscription\", id, reason });\n    const subscription = this.getSubscription(id);\n    this.subscriptions.delete(id);\n    this.topicMap.delete(subscription.topic, id);\n    this.events.emit(SUBSCRIBER_EVENTS.deleted, {\n      ...subscription,\n      reason,\n    } as SubscriberEvents.Deleted);\n  }\n\n  private restart = async () => {\n    this.restartInProgress = true;\n    await this.restore();\n    await this.reset();\n    this.restartInProgress = false;\n  };\n\n  private async persist() {\n    await this.setRelayerSubscriptions(this.values);\n    this.events.emit(SUBSCRIBER_EVENTS.sync);\n  }\n\n  private async reset() {\n    if (this.cached.length) {\n      const numOfBatches = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\n      for (let i = 0; i < numOfBatches; i++) {\n        const batch = this.cached.splice(0, this.batchSubscribeTopicsLimit);\n        await this.batchFetchMessages(batch);\n        await this.batchSubscribe(batch);\n      }\n    }\n    this.events.emit(SUBSCRIBER_EVENTS.resubscribed);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getRelayerSubscriptions();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.subscriptions.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored subscriptions for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", subscriptions: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private async batchSubscribe(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n\n    const result = (await this.rpcBatchSubscribe(subscriptions)) as string[];\n    if (!isValidArray(result)) return;\n\n    this.onBatchSubscribe(result.map((id, i) => ({ ...subscriptions[i], id })));\n  }\n\n  private async batchFetchMessages(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n    this.logger.trace(`Fetching batch messages for ${subscriptions.length} subscriptions`);\n    const response = await this.rpcBatchFetchMessages(subscriptions);\n    if (response && response.messages) {\n      this.pendingBatchMessages = this.pendingBatchMessages.concat(response.messages);\n    }\n  }\n\n  private async onConnect() {\n    await this.restart();\n    this.onEnable();\n  }\n\n  private onDisconnect() {\n    this.onDisable();\n  }\n\n  private async checkPending() {\n    if (!this.initialized || !this.relayer.connected) return;\n\n    const pendingSubscriptions: SubscriberTypes.Params[] = [];\n    this.pending.forEach((params) => {\n      pendingSubscriptions.push(params);\n    });\n    await this.batchSubscribe(pendingSubscriptions);\n\n    if (this.pendingBatchMessages.length) {\n      await this.relayer.handleBatchMessageEvents(this.pendingBatchMessages);\n      this.pendingBatchMessages = [];\n    }\n  }\n\n  private registerEventListeners() {\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, async () => {\n      await this.checkPending();\n    });\n    this.events.on(SUBSCRIBER_EVENTS.created, async (createdEvent: SubscriberEvents.Created) => {\n      const eventName = SUBSCRIBER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      await this.persist();\n    });\n    this.events.on(SUBSCRIBER_EVENTS.deleted, async (deletedEvent: SubscriberEvents.Deleted) => {\n      const eventName = SUBSCRIBER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      await this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private async restartToComplete() {\n    if (!this.restartInProgress) return;\n\n    await new Promise<void>((resolve) => {\n      const interval = setInterval(() => {\n        if (!this.restartInProgress) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, this.pollingInterval);\n    });\n  }\n}\n","import { EventEmitter } from \"events\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport {\n  formatJsonRpcResult,\n  getBigIntRpcId,\n  IJsonRpcProvider,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  JsonRpcPayload,\n  JsonRpcRequest,\n  RequestArguments,\n} from \"@walletconnect/jsonrpc-utils\";\nimport WsConnection from \"@walletconnect/jsonrpc-ws-connection\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n  Logger,\n} from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { ONE_MINUTE, ONE_SECOND, THIRTY_SECONDS, toMiliseconds } from \"@walletconnect/time\";\nimport {\n  ICore,\n  IMessageTracker,\n  IPublisher,\n  IRelayer,\n  ISubscriber,\n  RelayerOptions,\n  RelayerTypes,\n  SubscriberTypes,\n} from \"@walletconnect/types\";\nimport {\n  createExpiringPromise,\n  formatRelayRpcUrl,\n  isOnline,\n  subscribeToNetworkChange,\n  getBundleId,\n  getInternalError,\n  isNode,\n} from \"@walletconnect/utils\";\n\nimport {\n  RELAYER_SDK_VERSION,\n  RELAYER_CONTEXT,\n  RELAYER_DEFAULT_LOGGER,\n  RELAYER_EVENTS,\n  RELAYER_PROVIDER_EVENTS,\n  RELAYER_SUBSCRIBER_SUFFIX,\n  RELAYER_DEFAULT_RELAY_URL,\n  RELAYER_FAILOVER_RELAY_URL,\n  SUBSCRIBER_EVENTS,\n  RELAYER_RECONNECT_TIMEOUT,\n  RELAYER_TRANSPORT_CUTOFF,\n} from \"../constants\";\nimport { MessageTracker } from \"./messages\";\nimport { Publisher } from \"./publisher\";\nimport { Subscriber } from \"./subscriber\";\n\nexport class Relayer extends IRelayer {\n  public protocol = \"wc\";\n  public version = 2;\n\n  public core: ICore;\n  public logger: Logger;\n  public events = new EventEmitter();\n  public provider: IJsonRpcProvider;\n  public messages: IMessageTracker;\n  public subscriber: ISubscriber;\n  public publisher: IPublisher;\n  public name = RELAYER_CONTEXT;\n  public transportExplicitlyClosed = false;\n\n  private initialized = false;\n  private connectionAttemptInProgress = false;\n\n  private relayUrl: string;\n  private projectId: string | undefined;\n  private bundleId: string | undefined;\n  private connectionStatusPollingInterval = 20;\n  private staleConnectionErrors = [\"socket hang up\", \"stalled\", \"interrupted\"];\n  private hasExperiencedNetworkDisruption = false;\n  private requestsInFlight = new Map<\n    number,\n    {\n      promise: Promise<any>;\n      request: RequestArguments<RelayJsonRpc.SubscribeParams>;\n    }\n  >();\n\n  private pingTimeout: NodeJS.Timeout | undefined;\n  /**\n   * the relay pings the client 30 seconds after the last message was received\n   * meaning if we don't receive a message in 30 seconds, the connection can be considered dead\n   */\n  private heartBeatTimeout = toMiliseconds(THIRTY_SECONDS + ONE_SECOND);\n\n  constructor(opts: RelayerOptions) {\n    super(opts);\n    this.core = opts.core;\n    this.logger =\n      typeof opts.logger !== \"undefined\" && typeof opts.logger !== \"string\"\n        ? generateChildLogger(opts.logger, this.name)\n        : pino(getDefaultLoggerOptions({ level: opts.logger || RELAYER_DEFAULT_LOGGER }));\n    this.messages = new MessageTracker(this.logger, opts.core);\n    this.subscriber = new Subscriber(this, this.logger);\n    this.publisher = new Publisher(this, this.logger);\n\n    this.relayUrl = opts?.relayUrl || RELAYER_DEFAULT_RELAY_URL;\n    this.projectId = opts.projectId;\n    this.bundleId = getBundleId();\n\n    // re-assigned during init()\n    this.provider = {} as IJsonRpcProvider;\n  }\n\n  public async init() {\n    this.logger.trace(`Initialized`);\n    this.registerEventListeners();\n    await Promise.all([this.messages.init(), this.subscriber.init()]);\n    try {\n      await this.transportOpen();\n    } catch {\n      this.logger.warn(\n        `Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${RELAYER_FAILOVER_RELAY_URL}...`,\n      );\n      await this.restartTransport(RELAYER_FAILOVER_RELAY_URL);\n    }\n    this.initialized = true;\n\n    setTimeout(async () => {\n      if (this.subscriber.topics.length === 0 && this.subscriber.pending.size === 0) {\n        this.logger.info(`No topics subscribed to after init, closing transport`);\n        await this.transportClose();\n        this.transportExplicitlyClosed = false;\n      }\n    }, RELAYER_TRANSPORT_CUTOFF);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get connected() {\n    // @ts-expect-error\n    return this.provider?.connection?.socket?.readyState === 1 ?? false;\n  }\n\n  get connecting() {\n    // @ts-expect-error\n    return this.provider?.connection?.socket?.readyState === 0 ?? false;\n  }\n\n  public async publish(topic: string, message: string, opts?: RelayerTypes.PublishOptions) {\n    this.isInitialized();\n    await this.publisher.publish(topic, message, opts);\n    await this.recordMessageEvent({\n      topic,\n      message,\n      // We don't have `publishedAt` from the relay server on outgoing, so use current time to satisfy type.\n      publishedAt: Date.now(),\n    });\n  }\n\n  public async subscribe(topic: string, opts?: RelayerTypes.SubscribeOptions) {\n    this.isInitialized();\n    let id = this.subscriber.topicMap.get(topic)?.[0] || \"\";\n    let resolvePromise: () => void;\n    const onSubCreated = (subscription: SubscriberTypes.Active) => {\n      if (subscription.topic === topic) {\n        this.subscriber.off(SUBSCRIBER_EVENTS.created, onSubCreated);\n        resolvePromise();\n      }\n    };\n\n    await Promise.all([\n      new Promise<void>((resolve) => {\n        resolvePromise = resolve;\n        this.subscriber.on(SUBSCRIBER_EVENTS.created, onSubCreated);\n      }),\n      new Promise<void>(async (resolve) => {\n        const result = await this.subscriber.subscribe(topic, opts);\n        id = result || id;\n        resolve();\n      }),\n    ]);\n    return id;\n  }\n\n  public request = async (request: RequestArguments<RelayJsonRpc.SubscribeParams>) => {\n    this.logger.debug(`Publishing Request Payload`);\n    const id = request.id || (getBigIntRpcId().toString() as any);\n    await this.toEstablishConnection();\n    try {\n      const requestPromise = this.provider.request(request);\n      this.requestsInFlight.set(id, {\n        promise: requestPromise,\n        request,\n      });\n      this.logger.trace(\n        {\n          id,\n          method: request.method,\n          topic: request.params?.topic,\n        },\n        \"relayer.request - attempt to publish...\",\n      );\n\n      /**\n       * During publish, we must listen for any disconnect event and reject the promise, else the publish would hang indefinitely\n       */\n      const result = await new Promise(async (resolve, reject) => {\n        const onDisconnect = () => {\n          reject(new Error(`relayer.request - publish interrupted, id: ${id}`));\n        };\n        this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\n        const res = await requestPromise;\n        this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\n        resolve(res);\n      });\n      this.logger.trace(\n        {\n          id,\n          method: request.method,\n          topic: request.params?.topic,\n        },\n        \"relayer.request - published\",\n      );\n      return result as JsonRpcPayload;\n    } catch (e) {\n      this.logger.debug(`Failed to Publish Request: ${id}`);\n      throw e;\n    } finally {\n      this.requestsInFlight.delete(id);\n    }\n  };\n\n  public async unsubscribe(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    this.isInitialized();\n    await this.subscriber.unsubscribe(topic, opts);\n  }\n\n  public on(event: string, listener: any) {\n    this.events.on(event, listener);\n  }\n\n  public once(event: string, listener: any) {\n    this.events.once(event, listener);\n  }\n\n  public off(event: string, listener: any) {\n    this.events.off(event, listener);\n  }\n\n  public removeListener(event: string, listener: any) {\n    this.events.removeListener(event, listener);\n  }\n\n  public async transportDisconnect() {\n    if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) {\n      try {\n        await Promise.all(\n          Array.from(this.requestsInFlight.values()).map((request) => request.promise),\n        );\n      } catch (e) {\n        this.logger.warn(e);\n      }\n    }\n\n    if (this.hasExperiencedNetworkDisruption || this.connected) {\n      await createExpiringPromise(this.provider.disconnect(), 2000, \"provider.disconnect()\").catch(\n        () => this.onProviderDisconnect(),\n      );\n    } else {\n      this.onProviderDisconnect();\n    }\n  }\n\n  public async transportClose() {\n    this.transportExplicitlyClosed = true;\n    await this.transportDisconnect();\n  }\n\n  public async transportOpen(relayUrl?: string) {\n    await this.confirmOnlineStateOrThrow();\n    if (relayUrl && relayUrl !== this.relayUrl) {\n      this.relayUrl = relayUrl;\n      await this.transportDisconnect();\n    }\n    // Always create new socket instance when trying to connect because if the socket was dropped due to `socket hang up` exception\n    // It wont be able to reconnect\n    await this.createProvider();\n    this.connectionAttemptInProgress = true;\n    this.transportExplicitlyClosed = false;\n    try {\n      await new Promise<void>(async (resolve, reject) => {\n        const onDisconnect = () => {\n          this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\n          reject(new Error(`Connection interrupted while trying to subscribe`));\n        };\n        this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\n\n        await createExpiringPromise(\n          this.provider.connect(),\n          toMiliseconds(ONE_MINUTE),\n          `Socket stalled when trying to connect to ${this.relayUrl}`,\n        ).catch((e) => {\n          reject(e);\n        });\n        await this.subscriber.start();\n        this.hasExperiencedNetworkDisruption = false;\n        resolve();\n      });\n    } catch (e) {\n      this.logger.error(e);\n      const error = e as Error;\n      this.hasExperiencedNetworkDisruption = true;\n      if (!this.isConnectionStalled(error.message)) {\n        throw e;\n      }\n    } finally {\n      this.connectionAttemptInProgress = false;\n    }\n  }\n\n  public async restartTransport(relayUrl?: string) {\n    if (this.connectionAttemptInProgress) return;\n    this.relayUrl = relayUrl || this.relayUrl;\n    await this.confirmOnlineStateOrThrow();\n    await this.transportClose();\n    await this.transportOpen();\n  }\n\n  public async confirmOnlineStateOrThrow() {\n    if (await isOnline()) return;\n    throw new Error(\"No internet connection detected. Please restart your network and try again.\");\n  }\n\n  public async handleBatchMessageEvents(messages: RelayerTypes.MessageEvent[]) {\n    if (messages?.length === 0) {\n      this.logger.trace(\"Batch message events is empty. Ignoring...\");\n      return;\n    }\n    const sortedMessages = messages.sort((a, b) => a.publishedAt - b.publishedAt);\n    this.logger.trace(`Batch of ${sortedMessages.length} message events sorted`);\n    for (const message of sortedMessages) {\n      try {\n        await this.onMessageEvent(message);\n      } catch (e) {\n        this.logger.warn(e);\n      }\n    }\n    this.logger.trace(`Batch of ${sortedMessages.length} message events processed`);\n  }\n\n  // ---------- Private ----------------------------------------------- //\n  /*\n   * In Node, we must detect when the connection is stalled and terminate it.\n   * The logic is, if we don't receive ping from the relay within a certain time, we terminate the connection.\n   * The timer is refreshed on every message received from the relay.\n   *\n   * In the browser, ping/pong events are not exposed, so the above behaviour is handled by `subscribeToNetworkChange` and `isOnline` functions.\n   */\n  private startPingTimeout() {\n    if (!isNode()) return;\n    try {\n      //@ts-expect-error - Types are divergent between the node and browser WS API\n      if (this.provider?.connection?.socket) {\n        //@ts-expect-error\n        this.provider?.connection?.socket?.once(\"ping\", () => {\n          this.resetPingTimeout();\n        });\n      }\n      this.resetPingTimeout();\n    } catch (e) {\n      this.logger.warn(e);\n    }\n  }\n\n  private resetPingTimeout = () => {\n    if (!isNode()) return;\n    try {\n      clearTimeout(this.pingTimeout);\n      this.pingTimeout = setTimeout(() => {\n        //@ts-expect-error\n        this.provider?.connection?.socket?.terminate();\n      }, this.heartBeatTimeout);\n    } catch (e) {\n      this.logger.warn(e);\n    }\n  };\n\n  private isConnectionStalled(message: string) {\n    return this.staleConnectionErrors.some((error) => message.includes(error));\n  }\n\n  private async createProvider() {\n    if (this.provider.connection) {\n      this.unregisterProviderListeners();\n    }\n    const auth = await this.core.crypto.signJWT(this.relayUrl);\n\n    this.provider = new JsonRpcProvider(\n      new WsConnection(\n        formatRelayRpcUrl({\n          sdkVersion: RELAYER_SDK_VERSION,\n          protocol: this.protocol,\n          version: this.version,\n          relayUrl: this.relayUrl,\n          projectId: this.projectId,\n          auth,\n          useOnCloseEvent: true,\n          bundleId: this.bundleId,\n        }),\n      ),\n    );\n    this.registerProviderListeners();\n  }\n\n  private async recordMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\n    const { topic, message } = messageEvent;\n    await this.messages.set(topic, message);\n  }\n\n  private async shouldIgnoreMessageEvent(\n    messageEvent: RelayerTypes.MessageEvent,\n  ): Promise<boolean> {\n    const { topic, message } = messageEvent;\n\n    // Ignore if incoming `message` is clearly invalid.\n    if (!message || message.length === 0) {\n      this.logger.debug(`Ignoring invalid/empty message: ${message}`);\n      return true;\n    }\n\n    // Ignore if `topic` is not subscribed to.\n    if (!(await this.subscriber.isSubscribed(topic))) {\n      this.logger.debug(`Ignoring message for non-subscribed topic ${topic}`);\n      return true;\n    }\n\n    // Ignore if `message` is a duplicate.\n    const exists = this.messages.has(topic, message);\n    if (exists) {\n      this.logger.debug(`Ignoring duplicate message: ${message}`);\n    }\n    return exists;\n  }\n\n  private async onProviderPayload(payload: JsonRpcPayload) {\n    this.logger.debug(`Incoming Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"incoming\", payload });\n    if (isJsonRpcRequest(payload)) {\n      if (!payload.method.endsWith(RELAYER_SUBSCRIBER_SUFFIX)) return;\n      const event = (payload as JsonRpcRequest<RelayJsonRpc.SubscriptionParams>).params;\n      const { topic, message, publishedAt } = event.data;\n      const messageEvent: RelayerTypes.MessageEvent = { topic, message, publishedAt };\n      this.logger.debug(`Emitting Relayer Payload`);\n      this.logger.trace({ type: \"event\", event: event.id, ...messageEvent });\n      this.events.emit(event.id, messageEvent);\n      await this.acknowledgePayload(payload);\n      await this.onMessageEvent(messageEvent);\n    } else if (isJsonRpcResponse(payload)) {\n      this.events.emit(RELAYER_EVENTS.message_ack, payload);\n    }\n  }\n\n  private async onMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\n    if (await this.shouldIgnoreMessageEvent(messageEvent)) return;\n    this.events.emit(RELAYER_EVENTS.message, messageEvent);\n    await this.recordMessageEvent(messageEvent);\n  }\n\n  private async acknowledgePayload(payload: JsonRpcPayload) {\n    const response = formatJsonRpcResult(payload.id, true);\n    await this.provider.connection.send(response);\n  }\n\n  // ---------- Events Handlers ----------------------------------------------- //\n  private onPayloadHandler = (payload: JsonRpcPayload) => {\n    this.onProviderPayload(payload);\n    this.resetPingTimeout();\n  };\n\n  private onConnectHandler = () => {\n    this.startPingTimeout();\n    this.events.emit(RELAYER_EVENTS.connect);\n  };\n\n  private onDisconnectHandler = () => {\n    this.onProviderDisconnect();\n  };\n\n  private onProviderErrorHandler = (error: Error) => {\n    this.logger.error(error);\n    this.events.emit(RELAYER_EVENTS.error, error);\n    // close the transport when a fatal error is received as there's no way to recover from it\n    // usual cases are missing/invalid projectId, expired jwt token, invalid origin etc\n    this.logger.info(\"Fatal socket error received, closing transport\");\n    this.transportClose();\n  };\n\n  private registerProviderListeners = () => {\n    this.provider.on(RELAYER_PROVIDER_EVENTS.payload, this.onPayloadHandler);\n    this.provider.on(RELAYER_PROVIDER_EVENTS.connect, this.onConnectHandler);\n    this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, this.onDisconnectHandler);\n    this.provider.on(RELAYER_PROVIDER_EVENTS.error, this.onProviderErrorHandler);\n  };\n\n  private unregisterProviderListeners() {\n    this.provider.off(RELAYER_PROVIDER_EVENTS.payload, this.onPayloadHandler);\n    this.provider.off(RELAYER_PROVIDER_EVENTS.connect, this.onConnectHandler);\n    this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, this.onDisconnectHandler);\n    this.provider.off(RELAYER_PROVIDER_EVENTS.error, this.onProviderErrorHandler);\n    clearTimeout(this.pingTimeout);\n  }\n\n  private async registerEventListeners() {\n    let lastConnectedState = await isOnline();\n    subscribeToNetworkChange(async (connected: boolean) => {\n      // sometimes the network change event is triggered multiple times so avoid reacting to the samFe value\n      if (lastConnectedState === connected) return;\n\n      lastConnectedState = connected;\n      if (!connected) {\n        // when the device network is restarted, the socket might stay in false `connected` state\n        this.hasExperiencedNetworkDisruption = true;\n        await this.transportDisconnect();\n        this.transportExplicitlyClosed = false;\n      } else {\n        await this.restartTransport().catch((error) => this.logger.error(error));\n      }\n    });\n  }\n\n  private async onProviderDisconnect() {\n    await this.subscriber.stop();\n    this.requestsInFlight.clear();\n    clearTimeout(this.pingTimeout);\n    this.events.emit(RELAYER_EVENTS.disconnect);\n    this.connectionAttemptInProgress = false;\n    if (this.transportExplicitlyClosed) return;\n    setTimeout(async () => {\n      await this.transportOpen().catch((error) => this.logger.error(error));\n    }, toMiliseconds(RELAYER_RECONNECT_TIMEOUT));\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private async toEstablishConnection() {\n    await this.confirmOnlineStateOrThrow();\n    if (this.connected) return;\n    if (this.connectionAttemptInProgress) {\n      await new Promise<void>((resolve) => {\n        const interval = setInterval(() => {\n          if (this.connected) {\n            clearInterval(interval);\n            resolve();\n          }\n        }, this.connectionStatusPollingInterval);\n      });\n    }\n    await this.transportOpen();\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IStore } from \"@walletconnect/types\";\nimport {\n  getInternalError,\n  isProposalStruct,\n  isSessionStruct,\n  isUndefined,\n} from \"@walletconnect/utils\";\nimport { CORE_STORAGE_PREFIX, STORE_STORAGE_VERSION } from \"../constants\";\nimport isEqual from \"lodash.isequal\";\n\nexport class Store<Key, Data extends Record<string, any>> extends IStore<Key, Data> {\n  public map = new Map<Key, Data>();\n  public version = STORE_STORAGE_VERSION;\n\n  private cached: Data[] = [];\n  private initialized = false;\n\n  /**\n   * Regenerates the value key to retrieve it from cache\n   */\n  private getKey: ((data: Data) => Key) | undefined;\n\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  // stores recently deleted key to return different rejection message when key is not found\n  private recentlyDeleted: Key[] = [];\n  private recentlyDeletedLimit = 200;\n\n  /**\n   * @param {ICore} core Core\n   * @param {Logger} logger Logger\n   * @param {string} name Store's name\n   * @param {Store<Key, Data>[\"getKey\"]} getKey Regenerates the value key to retrieve it from cache\n   * @param {string} storagePrefix Prefixes value keys\n   */\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n    public name: string,\n    storagePrefix: string = CORE_STORAGE_PREFIX,\n    getKey: Store<Key, Data>[\"getKey\"] = undefined,\n  ) {\n    super(core, logger, name, storagePrefix);\n    this.logger = generateChildLogger(logger, this.name);\n    this.storagePrefix = storagePrefix;\n    this.getKey = getKey;\n  }\n\n  public init: IStore<Key, Data>[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n\n      await this.restore();\n\n      this.cached.forEach((value) => {\n        if (this.getKey && value !== null && !isUndefined(value)) {\n          this.map.set(this.getKey(value), value);\n        } else if (isProposalStruct(value)) {\n          // TODO(pedro) revert type casting as any\n          this.map.set(value.id as any, value);\n        } else if (isSessionStruct(value)) {\n          // TODO(pedro) revert type casting as any\n          this.map.set(value.topic as any, value);\n        }\n      });\n\n      this.cached = [];\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  get length() {\n    return this.map.size;\n  }\n\n  get keys() {\n    return Array.from(this.map.keys());\n  }\n\n  get values() {\n    return Array.from(this.map.values());\n  }\n\n  public set: IStore<Key, Data>[\"set\"] = async (key, value) => {\n    this.isInitialized();\n    if (this.map.has(key)) {\n      await this.update(key, value);\n    } else {\n      this.logger.debug(`Setting value`);\n      this.logger.trace({ type: \"method\", method: \"set\", key, value });\n      this.map.set(key, value);\n      await this.persist();\n    }\n  };\n\n  public get: IStore<Key, Data>[\"get\"] = (key) => {\n    this.isInitialized();\n    this.logger.debug(`Getting value`);\n    this.logger.trace({ type: \"method\", method: \"get\", key });\n    const value = this.getData(key);\n    return value;\n  };\n\n  public getAll: IStore<Key, Data>[\"getAll\"] = (filter) => {\n    this.isInitialized();\n    if (!filter) return this.values;\n\n    return this.values.filter((value) =>\n      Object.keys(filter).every((key) => isEqual(value[key], filter[key])),\n    );\n  };\n\n  public update: IStore<Key, Data>[\"update\"] = async (key, update) => {\n    this.isInitialized();\n    this.logger.debug(`Updating value`);\n    this.logger.trace({ type: \"method\", method: \"update\", key, update });\n    const value = { ...this.getData(key), ...update };\n    this.map.set(key, value);\n    await this.persist();\n  };\n\n  public delete: IStore<Key, Data>[\"delete\"] = async (key, reason) => {\n    this.isInitialized();\n    if (!this.map.has(key)) return;\n    this.logger.debug(`Deleting value`);\n    this.logger.trace({ type: \"method\", method: \"delete\", key, reason });\n    this.map.delete(key);\n    this.addToRecentlyDeleted(key);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private addToRecentlyDeleted(key: Key) {\n    this.recentlyDeleted.push(key);\n    // limit the size of the recentlyDeleted array, truncate the 100 oldest entries.\n    if (this.recentlyDeleted.length >= this.recentlyDeletedLimit) {\n      this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);\n    }\n  }\n\n  private async setDataStore(value: Data[]) {\n    await this.core.storage.setItem<Data[]>(this.storageKey, value);\n  }\n\n  private async getDataStore() {\n    const value = await this.core.storage.getItem<Data[]>(this.storageKey);\n    return value;\n  }\n\n  private getData(key: Key) {\n    const value = this.map.get(key);\n    if (!value) {\n      if (this.recentlyDeleted.includes(key)) {\n        const { message } = getInternalError(\n          \"MISSING_OR_INVALID\",\n          `Record was recently deleted - ${this.name}: ${key}`,\n        );\n        this.logger.error(message);\n        throw new Error(message);\n      }\n\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${key}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return value;\n  }\n\n  private async persist() {\n    await this.setDataStore(this.values);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getDataStore();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.map.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored value for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", value: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore value for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport {\n  ICore,\n  PairingTypes,\n  IPairing,\n  IPairingPrivate,\n  IStore,\n  RelayerTypes,\n  PairingJsonRpcTypes,\n  ExpirerTypes,\n} from \"@walletconnect/types\";\nimport {\n  getInternalError,\n  parseUri,\n  calcExpiry,\n  generateRandomBytes32,\n  formatUri,\n  getSdkError,\n  engineEvent,\n  createDelayedPromise,\n  isValidParams,\n  isValidUrl,\n  isValidString,\n  isExpired,\n  parseExpirerTarget,\n  TYPE_1,\n} from \"@walletconnect/utils\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES, THIRTY_DAYS, toMiliseconds } from \"@walletconnect/time\";\nimport EventEmitter from \"events\";\nimport {\n  PAIRING_CONTEXT,\n  PAIRING_STORAGE_VERSION,\n  CORE_STORAGE_PREFIX,\n  RELAYER_DEFAULT_PROTOCOL,\n  PAIRING_RPC_OPTS,\n  RELAYER_EVENTS,\n  EXPIRER_EVENTS,\n  PAIRING_EVENTS,\n} from \"../constants\";\nimport { Store } from \"../controllers/store\";\n\nexport class Pairing implements IPairing {\n  public name = PAIRING_CONTEXT;\n  public version = PAIRING_STORAGE_VERSION;\n\n  public events = new EventEmitter();\n  public pairings: IStore<string, PairingTypes.Struct>;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n  private ignoredPayloadTypes = [TYPE_1];\n  private registeredMethods: string[] = [];\n\n  constructor(public core: ICore, public logger: Logger) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n    this.pairings = new Store(this.core, this.logger, this.name, this.storagePrefix);\n  }\n\n  public init: IPairing[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.pairings.init();\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.initialized = true;\n      this.logger.trace(`Initialized`);\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public register: IPairing[\"register\"] = ({ methods }) => {\n    this.isInitialized();\n    this.registeredMethods = [...new Set([...this.registeredMethods, ...methods])];\n  };\n\n  public create: IPairing[\"create\"] = async (params) => {\n    this.isInitialized();\n    const symKey = generateRandomBytes32();\n    const topic = await this.core.crypto.setSymKey(symKey);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const relay = { protocol: RELAYER_DEFAULT_PROTOCOL };\n    const pairing = { topic, expiry, relay, active: false };\n    const uri = formatUri({\n      protocol: this.core.protocol,\n      version: this.core.version,\n      topic,\n      symKey,\n      relay,\n      expiryTimestamp: expiry,\n      methods: params?.methods,\n    });\n    this.core.expirer.set(topic, expiry);\n    await this.pairings.set(topic, pairing);\n    await this.core.relayer.subscribe(topic);\n\n    return { topic, uri };\n  };\n\n  public pair: IPairing[\"pair\"] = async (params) => {\n    this.isInitialized();\n    this.isValidPair(params);\n    const { topic, symKey, relay, expiryTimestamp, methods } = parseUri(params.uri);\n    let existingPairing;\n    if (this.pairings.keys.includes(topic)) {\n      existingPairing = this.pairings.get(topic);\n      if (existingPairing.active) {\n        throw new Error(\n          `Pairing already exists: ${topic}. Please try again with a new connection URI.`,\n        );\n      }\n    }\n\n    const expiry = expiryTimestamp || calcExpiry(FIVE_MINUTES);\n    const pairing = { topic, relay, expiry, active: false, methods };\n    this.core.expirer.set(topic, expiry);\n    await this.pairings.set(topic, pairing);\n\n    if (params.activatePairing) {\n      await this.activate({ topic });\n    }\n\n    this.events.emit(PAIRING_EVENTS.create, pairing);\n\n    // avoid overwriting keychain pairing already exists\n    if (!this.core.crypto.keychain.has(topic)) {\n      await this.core.crypto.setSymKey(symKey, topic);\n    }\n    await this.core.relayer.subscribe(topic, { relay });\n    return pairing;\n  };\n\n  public activate: IPairing[\"activate\"] = async ({ topic }) => {\n    this.isInitialized();\n    const expiry = calcExpiry(THIRTY_DAYS);\n    this.core.expirer.set(topic, expiry);\n    await this.pairings.update(topic, { active: true, expiry });\n  };\n\n  public ping: IPairing[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.pairings.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_pairingPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"pairing_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    }\n  };\n\n  public updateExpiry: IPairing[\"updateExpiry\"] = async ({ topic, expiry }) => {\n    this.isInitialized();\n    await this.pairings.update(topic, { expiry });\n  };\n\n  public updateMetadata: IPairing[\"updateMetadata\"] = async ({ topic, metadata }) => {\n    this.isInitialized();\n    await this.pairings.update(topic, { peerMetadata: metadata });\n  };\n\n  public getPairings: IPairing[\"getPairings\"] = () => {\n    this.isInitialized();\n    return this.pairings.values;\n  };\n\n  public disconnect: IPairing[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.pairings.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_pairingDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deletePairing(topic);\n    }\n  };\n\n  // ---------- Private Helpers ----------------------------------------------- //\n\n  private sendRequest: IPairingPrivate[\"sendRequest\"] = async (topic, method, params) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.core.crypto.encode(topic, payload);\n    const opts = PAIRING_RPC_OPTS[method].req;\n    this.core.history.set(topic, payload);\n    this.core.relayer.publish(topic, message, opts);\n    return payload.id;\n  };\n\n  private sendResult: IPairingPrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.core.crypto.encode(topic, payload);\n    const record = await this.core.history.get(topic, id);\n    const opts = PAIRING_RPC_OPTS[record.request.method].res;\n    await this.core.relayer.publish(topic, message, opts);\n    await this.core.history.resolve(payload);\n  };\n\n  private sendError: IPairingPrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.core.crypto.encode(topic, payload);\n    const record = await this.core.history.get(topic, id);\n    const opts = PAIRING_RPC_OPTS[record.request.method]\n      ? PAIRING_RPC_OPTS[record.request.method].res\n      : PAIRING_RPC_OPTS.unregistered_method.res;\n\n    await this.core.relayer.publish(topic, message, opts);\n    await this.core.history.resolve(payload);\n  };\n\n  private deletePairing: IPairingPrivate[\"deletePairing\"] = async (topic, expirerHasDeleted) => {\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.core.relayer.unsubscribe(topic);\n    await Promise.all([\n      this.pairings.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.core.crypto.deleteSymKey(topic),\n      expirerHasDeleted ? Promise.resolve() : this.core.expirer.del(topic),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private cleanup = async () => {\n    const expiredPairings = this.pairings.getAll().filter((pairing) => isExpired(pairing.expiry));\n    await Promise.all(expiredPairings.map((pairing) => this.deletePairing(pairing.topic)));\n  };\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.core.relayer.on(RELAYER_EVENTS.message, async (event: RelayerTypes.MessageEvent) => {\n      const { topic, message } = event;\n\n      // Do not handle if the topic is not related to known pairing topics.\n      if (!this.pairings.keys.includes(topic)) return;\n\n      // messages of certain types should be ignored as they are handled by their respective SDKs\n      if (this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(message))) return;\n\n      const payload = await this.core.crypto.decode(topic, message);\n\n      try {\n        if (isJsonRpcRequest(payload)) {\n          this.core.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.core.history.resolve(payload);\n          await this.onRelayEventResponse({ topic, payload });\n          this.core.history.delete(topic, payload.id);\n        }\n      } catch (error) {\n        this.logger.error(error);\n      }\n    });\n  }\n\n  private onRelayEventRequest: IPairingPrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as PairingJsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_pairingPing\":\n        return this.onPairingPingRequest(topic, payload);\n      case \"wc_pairingDelete\":\n        return this.onPairingDeleteRequest(topic, payload);\n      default:\n        return this.onUnknownRpcMethodRequest(topic, payload);\n    }\n  };\n\n  private onRelayEventResponse: IPairingPrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as PairingJsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_pairingPing\":\n        return this.onPairingPingResponse(topic, payload);\n      default:\n        return this.onUnknownRpcMethodResponse(resMethod);\n    }\n  };\n\n  private onPairingPingRequest: IPairingPrivate[\"onPairingPingRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_pairingPing\">(id, topic, true);\n      this.events.emit(PAIRING_EVENTS.ping, { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onPairingPingResponse: IPairingPrivate[\"onPairingPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where pairing_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"pairing_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"pairing_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onPairingDeleteRequest: IPairingPrivate[\"onPairingDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic });\n      await this.deletePairing(topic);\n      this.events.emit(PAIRING_EVENTS.delete, { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onUnknownRpcMethodRequest: IPairingPrivate[\"onUnknownRpcMethodRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, method } = payload;\n\n    try {\n      // Ignore if the implementing client has registered this method as known.\n      if (this.registeredMethods.includes(method)) return;\n      const error = getSdkError(\"WC_METHOD_UNSUPPORTED\", method);\n      await this.sendError(id, topic, error);\n      this.logger.error(error);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onUnknownRpcMethodResponse: IPairingPrivate[\"onUnknownRpcMethodResponse\"] = (method) => {\n    // Ignore if the implementing client has registered this method as known.\n    if (this.registeredMethods.includes(method)) return;\n    this.logger.error(getSdkError(\"WC_METHOD_UNSUPPORTED\", method));\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic } = parseExpirerTarget(event.target);\n      if (!topic) return;\n      if (!this.pairings.keys.includes(topic)) return;\n      await this.deletePairing(topic, true);\n      this.events.emit(PAIRING_EVENTS.expire, { topic });\n    });\n  }\n\n  // ---------- Validation Helpers ----------------------------------- //\n\n  private isValidPair = (params: { uri: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() params: ${params}`);\n      throw new Error(message);\n    }\n    if (!isValidUrl(params.uri)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri: ${params.uri}`);\n      throw new Error(message);\n    }\n    const uri = parseUri(params.uri);\n    if (!uri?.relay?.protocol) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri#relay-protocol`);\n      throw new Error(message);\n    }\n    if (!uri?.symKey) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri#symKey`);\n      throw new Error(message);\n    }\n    if (uri?.expiryTimestamp) {\n      const expiration = toMiliseconds(uri?.expiryTimestamp);\n      if (expiration < Date.now()) {\n        const { message } = getInternalError(\n          \"EXPIRED\",\n          `pair() URI has expired. Please try again with a new connection URI.`,\n        );\n        throw new Error(message);\n      }\n    }\n  };\n\n  private isValidPing = async (params: { topic: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidPairingTopic(topic);\n  };\n\n  private isValidDisconnect = async (params: { topic: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidPairingTopic(topic);\n  };\n\n  private isValidPairingTopic = async (topic: any) => {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.pairings.get(topic).expiry)) {\n      await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  };\n}\n","import { formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { IJsonRpcHistory, JsonRpcRecord, RequestEvent, ICore } from \"@walletconnect/types\";\nimport { calcExpiry, getInternalError } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { THIRTY_DAYS, toMiliseconds } from \"@walletconnect/time\";\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport {\n  CORE_STORAGE_PREFIX,\n  HISTORY_CONTEXT,\n  HISTORY_EVENTS,\n  HISTORY_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class JsonRpcHistory extends IJsonRpcHistory {\n  public records = new Map<number, JsonRpcRecord>();\n  public events = new EventEmitter();\n  public name = HISTORY_CONTEXT;\n  public version = HISTORY_STORAGE_VERSION;\n\n  private cached: JsonRpcRecord[] = [];\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IJsonRpcHistory[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((record) => this.records.set(record.id, record));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  get size(): number {\n    return this.records.size;\n  }\n\n  get keys(): number[] {\n    return Array.from(this.records.keys());\n  }\n\n  get values() {\n    return Array.from(this.records.values());\n  }\n\n  get pending(): RequestEvent[] {\n    const requests: RequestEvent[] = [];\n    this.values.forEach((record) => {\n      if (typeof record.response !== \"undefined\") return;\n      const requestEvent: RequestEvent = {\n        topic: record.topic,\n        request: formatJsonRpcRequest(record.request.method, record.request.params, record.id),\n        chainId: record.chainId,\n      };\n      return requests.push(requestEvent);\n    });\n    return requests;\n  }\n\n  public set: IJsonRpcHistory[\"set\"] = (topic, request, chainId) => {\n    this.isInitialized();\n    this.logger.debug(`Setting JSON-RPC request history record`);\n    this.logger.trace({ type: \"method\", method: \"set\", topic, request, chainId });\n    if (this.records.has(request.id)) return;\n    const record: JsonRpcRecord = {\n      id: request.id,\n      topic,\n      request: { method: request.method, params: request.params || null },\n      chainId,\n      expiry: calcExpiry(THIRTY_DAYS),\n    };\n    this.records.set(record.id, record);\n    this.persist();\n    this.events.emit(HISTORY_EVENTS.created, record);\n  };\n\n  public resolve: IJsonRpcHistory[\"resolve\"] = async (response) => {\n    this.isInitialized();\n    this.logger.debug(`Updating JSON-RPC response history record`);\n    this.logger.trace({ type: \"method\", method: \"update\", response });\n    if (!this.records.has(response.id)) return;\n    const record = await this.getRecord(response.id);\n    if (typeof record.response !== \"undefined\") return;\n    record.response = isJsonRpcError(response)\n      ? { error: response.error }\n      : { result: response.result };\n    this.records.set(record.id, record);\n    this.persist();\n    this.events.emit(HISTORY_EVENTS.updated, record);\n  };\n\n  public get: IJsonRpcHistory[\"get\"] = async (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Getting record`);\n    this.logger.trace({ type: \"method\", method: \"get\", topic, id });\n    const record = await this.getRecord(id);\n    return record;\n  };\n\n  public delete: IJsonRpcHistory[\"delete\"] = (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Deleting record`);\n    this.logger.trace({ type: \"method\", method: \"delete\", id });\n    this.values.forEach((record: JsonRpcRecord) => {\n      if (record.topic === topic) {\n        if (typeof id !== \"undefined\" && record.id !== id) return;\n        this.records.delete(record.id);\n        this.events.emit(HISTORY_EVENTS.deleted, record);\n      }\n    });\n    this.persist();\n  };\n\n  public exists: IJsonRpcHistory[\"exists\"] = async (topic, id) => {\n    this.isInitialized();\n    if (!this.records.has(id)) return false;\n    const record = await this.getRecord(id);\n    return record.topic === topic;\n  };\n\n  public on: IJsonRpcHistory[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IJsonRpcHistory[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IJsonRpcHistory[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IJsonRpcHistory[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setJsonRpcRecords(records: JsonRpcRecord[]): Promise<void> {\n    await this.core.storage.setItem<JsonRpcRecord[]>(this.storageKey, records);\n  }\n\n  private async getJsonRpcRecords(): Promise<JsonRpcRecord[] | undefined> {\n    const records = await this.core.storage.getItem<JsonRpcRecord[]>(this.storageKey);\n    return records;\n  }\n\n  private getRecord(id: number) {\n    this.isInitialized();\n    const record = this.records.get(id);\n    if (!record) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return record;\n  }\n\n  private async persist() {\n    await this.setJsonRpcRecords(this.values);\n    this.events.emit(HISTORY_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getJsonRpcRecords();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.records.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored records for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", records: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore records for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private registerEventListeners(): void {\n    this.events.on(HISTORY_EVENTS.created, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n    });\n    this.events.on(HISTORY_EVENTS.updated, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.updated;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n    });\n\n    this.events.on(HISTORY_EVENTS.deleted, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n    });\n\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\n      this.cleanup();\n    });\n  }\n\n  private cleanup() {\n    try {\n      this.isInitialized();\n      let deleted = false;\n      this.records.forEach((record: JsonRpcRecord) => {\n        const msToExpiry = toMiliseconds(record.expiry || 0) - Date.now();\n        if (msToExpiry <= 0) {\n          this.logger.info(`Deleting expired history log: ${record.id}`);\n          this.records.delete(record.id);\n          this.events.emit(HISTORY_EVENTS.deleted, record, false);\n          deleted = true;\n        }\n      });\n      if (deleted) {\n        this.persist();\n      }\n    } catch (e) {\n      this.logger.warn(e);\n    }\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { toMiliseconds } from \"@walletconnect/time\";\nimport { ExpirerTypes, ICore, IExpirer } from \"@walletconnect/types\";\nimport { getInternalError, formatIdTarget, formatTopicTarget } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport {\n  CORE_STORAGE_PREFIX,\n  EXPIRER_CONTEXT,\n  EXPIRER_EVENTS,\n  EXPIRER_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class Expirer extends IExpirer {\n  public expirations = new Map<string, ExpirerTypes.Expiration>();\n  public events = new EventEmitter();\n  public name = EXPIRER_CONTEXT;\n  public version = EXPIRER_STORAGE_VERSION;\n\n  private cached: ExpirerTypes.Expiration[] = [];\n  private initialized = false;\n\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IExpirer[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((expiration) => this.expirations.set(expiration.target, expiration));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  get length(): number {\n    return this.expirations.size;\n  }\n\n  get keys(): string[] {\n    return Array.from(this.expirations.keys());\n  }\n\n  get values(): ExpirerTypes.Expiration[] {\n    return Array.from(this.expirations.values());\n  }\n\n  public has: IExpirer[\"has\"] = (key) => {\n    try {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      return typeof expiration !== \"undefined\";\n    } catch (e) {\n      // ignore\n      return false;\n    }\n  };\n\n  public set: IExpirer[\"set\"] = (key, expiry) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    const expiration = { target, expiry };\n    this.expirations.set(target, expiration);\n    this.checkExpiry(target, expiration);\n    this.events.emit(EXPIRER_EVENTS.created, {\n      target,\n      expiration,\n    } as ExpirerTypes.Created);\n  };\n\n  public get: IExpirer[\"get\"] = (key) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    return this.getExpiration(target);\n  };\n\n  public del: IExpirer[\"del\"] = (key) => {\n    this.isInitialized();\n    const exists = this.has(key);\n    if (exists) {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      this.expirations.delete(target);\n      this.events.emit(EXPIRER_EVENTS.deleted, {\n        target,\n        expiration,\n      } as ExpirerTypes.Deleted);\n    }\n  };\n\n  public on: IExpirer[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IExpirer[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IExpirer[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IExpirer[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private formatTarget(key: string | number) {\n    if (typeof key === \"string\") {\n      return formatTopicTarget(key);\n    } else if (typeof key === \"number\") {\n      return formatIdTarget(key);\n    }\n    const { message } = getInternalError(\"UNKNOWN_TYPE\", `Target type: ${typeof key}`);\n    throw new Error(message);\n  }\n\n  private async setExpirations(expirations: ExpirerTypes.Expiration[]): Promise<void> {\n    await this.core.storage.setItem<ExpirerTypes.Expiration[]>(this.storageKey, expirations);\n  }\n\n  private async getExpirations(): Promise<ExpirerTypes.Expiration[] | undefined> {\n    const expirations = await this.core.storage.getItem<ExpirerTypes.Expiration[]>(this.storageKey);\n    return expirations;\n  }\n\n  private async persist() {\n    await this.setExpirations(this.values);\n    this.events.emit(EXPIRER_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getExpirations();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.expirations.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored expirations for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", expirations: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore expirations for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private getExpiration(target: string): ExpirerTypes.Expiration {\n    const expiration = this.expirations.get(target);\n    if (!expiration) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${target}`);\n      this.logger.warn(message);\n      throw new Error(message);\n    }\n    return expiration;\n  }\n\n  private checkExpiry(target: string, expiration: ExpirerTypes.Expiration): void {\n    const { expiry } = expiration;\n    const msToTimeout = toMiliseconds(expiry) - Date.now();\n    if (msToTimeout <= 0) this.expire(target, expiration);\n  }\n\n  private expire(target: string, expiration: ExpirerTypes.Expiration): void {\n    this.expirations.delete(target);\n    this.events.emit(EXPIRER_EVENTS.expired, {\n      target,\n      expiration,\n    } as ExpirerTypes.Expired);\n  }\n\n  private checkExpirations(): void {\n    // avoid auto expiring if the relayer is not connected\n    if (!this.core.relayer.connected) return;\n    this.expirations.forEach((expiration, target) => this.checkExpiry(target, expiration));\n  }\n\n  private registerEventListeners(): void {\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => this.checkExpirations());\n    this.events.on(EXPIRER_EVENTS.created, (createdEvent: ExpirerTypes.Created) => {\n      const eventName = EXPIRER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.expired, (expiredEvent: ExpirerTypes.Expired) => {\n      const eventName = EXPIRER_EVENTS.expired;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: expiredEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.deleted, (deletedEvent: ExpirerTypes.Deleted) => {\n      const eventName = EXPIRER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { IVerify } from \"@walletconnect/types\";\nimport { isBrowser, isNode, isReactNative } from \"@walletconnect/utils\";\nimport { FIVE_SECONDS, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\n\nimport {\n  TRUSTED_VERIFY_URLS,\n  VERIFY_CONTEXT,\n  VERIFY_FALLBACK_SERVER,\n  VERIFY_SERVER,\n} from \"../constants\";\n\nexport class Verify extends IVerify {\n  public name = VERIFY_CONTEXT;\n  private verifyUrl: string;\n  private iframe?: HTMLIFrameElement;\n  private initialized = false;\n  private abortController: AbortController;\n  private isDevEnv;\n  // the queue is only used during the loading phase of the iframe to ensure all attestations are posted\n  private queue: string[] = [];\n  // flag to disable verify when the iframe fails to load on main & fallback urls.\n  // this means Verify API is not enabled for the current projectId and there's no point in trying to initialize it again.\n  private verifyDisabled = false;\n\n  constructor(public projectId: string, public logger: Logger) {\n    super(projectId, logger);\n    this.logger = generateChildLogger(logger, this.name);\n    this.verifyUrl = VERIFY_SERVER;\n    this.abortController = new AbortController();\n    this.isDevEnv = isNode() && process.env.IS_VITEST;\n  }\n\n  public init: IVerify[\"init\"] = async (params) => {\n    if (this.verifyDisabled) return;\n\n    // ignore on non browser environments\n    if (isReactNative() || !isBrowser()) return;\n\n    const verifyUrl = this.getVerifyUrl(params?.verifyUrl);\n    // if init is called again with a different url, remove the iframe and start over\n    if (this.verifyUrl !== verifyUrl) {\n      this.removeIframe();\n    }\n    this.verifyUrl = verifyUrl;\n\n    try {\n      await this.createIframe();\n    } catch (error) {\n      this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`);\n      this.logger.info(error);\n    }\n\n    if (this.initialized) return;\n\n    this.removeIframe();\n    this.verifyUrl = VERIFY_FALLBACK_SERVER;\n\n    try {\n      await this.createIframe();\n    } catch (error) {\n      this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`);\n      this.logger.info(error);\n      // if the fallback url fails to load as well, disable verify\n      this.verifyDisabled = true;\n    }\n  };\n\n  public register: IVerify[\"register\"] = async (params) => {\n    if (!this.initialized) {\n      this.addToQueue(params.attestationId);\n      await this.init();\n    } else {\n      this.sendPost(params.attestationId);\n    }\n  };\n\n  public resolve: IVerify[\"resolve\"] = async (params) => {\n    if (this.isDevEnv) return \"\";\n\n    const verifyUrl = this.getVerifyUrl(params?.verifyUrl);\n    let result;\n    try {\n      result = await this.fetchAttestation(params.attestationId, verifyUrl);\n    } catch (error) {\n      this.logger.info(\n        `failed to resolve attestation: ${params.attestationId} from url: ${verifyUrl}`,\n      );\n      this.logger.info(error);\n      result = await this.fetchAttestation(params.attestationId, VERIFY_FALLBACK_SERVER);\n    }\n    return result;\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  private fetchAttestation = async (attestationId: string, url: string) => {\n    this.logger.info(`resolving attestation: ${attestationId} from url: ${url}`);\n    // set artificial timeout to prevent hanging\n    const timeout = this.startAbortTimer(ONE_SECOND * 2);\n    const result = await fetch(`${url}/attestation/${attestationId}`, {\n      signal: this.abortController.signal,\n    });\n    clearTimeout(timeout);\n    return result.status === 200 ? await result.json() : undefined;\n  };\n\n  private addToQueue = (attestationId: string) => {\n    this.queue.push(attestationId);\n  };\n\n  private processQueue = () => {\n    if (this.queue.length === 0) return;\n    this.queue.forEach((attestationId) => this.sendPost(attestationId));\n    this.queue = [];\n  };\n\n  private sendPost = (attestationId: string) => {\n    try {\n      if (!this.iframe) return;\n      this.iframe.contentWindow?.postMessage(attestationId, \"*\"); // setting targetOrigin to \"*\" fixes the `Failed to execute 'postMessage' on 'DOMWindow': The target origin provided...` while the iframe is still loading\n      this.logger.info(`postMessage sent: ${attestationId} ${this.verifyUrl}`);\n    } catch (e) {}\n  };\n\n  private createIframe = async () => {\n    let iframeOnLoadResolve: () => void;\n    const onMessage = (event: MessageEvent) => {\n      if (event.data === \"verify_ready\") {\n        this.onInit();\n        window.removeEventListener(\"message\", onMessage);\n        iframeOnLoadResolve();\n      }\n    };\n    await Promise.race([\n      new Promise<void>((resolve) => {\n        const existingIframe = document.getElementById(VERIFY_CONTEXT);\n        if (existingIframe) {\n          this.iframe = existingIframe as HTMLIFrameElement;\n          this.onInit();\n          return resolve();\n        }\n\n        window.addEventListener(\"message\", onMessage);\n        const iframe = document.createElement(\"iframe\");\n        iframe.id = VERIFY_CONTEXT;\n        iframe.src = `${this.verifyUrl}/${this.projectId}`;\n        iframe.style.display = \"none\";\n        document.body.append(iframe);\n        this.iframe = iframe;\n        iframeOnLoadResolve = resolve;\n      }),\n      new Promise((_, reject) =>\n        setTimeout(() => {\n          window.removeEventListener(\"message\", onMessage);\n          reject(\"verify iframe load timeout\");\n        }, toMiliseconds(FIVE_SECONDS)),\n      ),\n    ]);\n  };\n\n  private onInit = () => {\n    this.initialized = true;\n    this.processQueue();\n  };\n\n  private startAbortTimer(timer: number) {\n    this.abortController = new AbortController();\n    return setTimeout(() => this.abortController.abort(), toMiliseconds(timer));\n  }\n\n  private removeIframe = () => {\n    if (!this.iframe) return;\n    this.iframe.remove();\n    this.iframe = undefined;\n    this.initialized = false;\n  };\n\n  private getVerifyUrl = (verifyUrl?: string) => {\n    let url = verifyUrl || VERIFY_SERVER;\n    if (!TRUSTED_VERIFY_URLS.includes(url)) {\n      this.logger.info(\n        `verify url: ${url}, not included in trusted list, assigning default: ${VERIFY_SERVER}`,\n      );\n      url = VERIFY_SERVER;\n    }\n    return url;\n  };\n}\n","import { generateChildLogger, Logger } from \"@walletconnect/logger\";\nimport { IEchoClient } from \"@walletconnect/types\";\nimport { ECHO_CONTEXT, ECHO_URL } from \"../constants\";\nimport fetch from \"isomorphic-unfetch\";\n\nexport class EchoClient extends IEchoClient {\n  public readonly context = ECHO_CONTEXT;\n  constructor(public projectId: string, public logger: Logger) {\n    super(projectId, logger);\n    this.logger = generateChildLogger(logger, this.context);\n  }\n\n  public registerDeviceToken: IEchoClient[\"registerDeviceToken\"] = async (params) => {\n    const { clientId, token, notificationType, enableEncrypted = false } = params;\n\n    const echoUrl = `${ECHO_URL}/${this.projectId}/clients`;\n\n    await fetch(echoUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        client_id: clientId,\n        type: notificationType,\n        token,\n        always_raw: enableEncrypted,\n      }),\n    });\n  };\n}\n","import { EventEmitter } from \"events\";\n\nimport KeyValueStorage from \"@walletconnect/keyvaluestorage\";\nimport { HeartBeat } from \"@walletconnect/heartbeat\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  generatePlatformLogger,\n  ChunkLoggerController,\n} from \"@walletconnect/logger\";\nimport { CoreTypes, ICore } from \"@walletconnect/types\";\n\nimport {\n  Crypto,\n  Relayer,\n  Pairing,\n  JsonRpcHistory,\n  Expirer,\n  Verify,\n  EchoClient,\n} from \"./controllers\";\nimport {\n  CORE_CONTEXT,\n  CORE_DEFAULT,\n  CORE_PROTOCOL,\n  CORE_STORAGE_OPTIONS,\n  CORE_VERSION,\n  RELAYER_DEFAULT_RELAY_URL,\n  WALLETCONNECT_CLIENT_ID,\n} from \"./constants\";\n\nexport class Core extends ICore {\n  public readonly protocol = CORE_PROTOCOL;\n  public readonly version = CORE_VERSION;\n\n  public readonly name: ICore[\"name\"] = CORE_CONTEXT;\n  public readonly relayUrl: ICore[\"relayUrl\"];\n  public readonly projectId: ICore[\"projectId\"];\n  public readonly customStoragePrefix: ICore[\"customStoragePrefix\"];\n  public events: ICore[\"events\"] = new EventEmitter();\n  public logger: ICore[\"logger\"];\n  public heartbeat: ICore[\"heartbeat\"];\n  public relayer: ICore[\"relayer\"];\n  public crypto: ICore[\"crypto\"];\n  public storage: ICore[\"storage\"];\n  public history: ICore[\"history\"];\n  public expirer: ICore[\"expirer\"];\n  public pairing: ICore[\"pairing\"];\n  public verify: ICore[\"verify\"];\n  public echoClient: ICore[\"echoClient\"];\n\n  private initialized = false;\n  private logChunkController: ChunkLoggerController | null;\n\n  static async init(opts?: CoreTypes.Options) {\n    const core = new Core(opts);\n    await core.initialize();\n    const clientId = await core.crypto.getClientId();\n    await core.storage.setItem(WALLETCONNECT_CLIENT_ID, clientId);\n\n    return core;\n  }\n\n  constructor(opts?: CoreTypes.Options) {\n    super(opts);\n    this.projectId = opts?.projectId;\n    this.relayUrl = opts?.relayUrl || RELAYER_DEFAULT_RELAY_URL;\n    this.customStoragePrefix = opts?.customStoragePrefix ? `:${opts.customStoragePrefix}` : \"\";\n\n    const loggerOptions = getDefaultLoggerOptions({\n      level: typeof opts?.logger === \"string\" && opts.logger ? opts.logger : CORE_DEFAULT.logger,\n    });\n\n    const { logger, chunkLoggerController } = generatePlatformLogger({\n      opts: loggerOptions,\n      maxSizeInBytes: opts?.maxLogBlobSizeInBytes,\n      loggerOverride: opts?.logger,\n    });\n\n    this.logChunkController = chunkLoggerController;\n\n    if (this.logChunkController?.downloadLogsBlobInBrowser) {\n      // @ts-ignore\n      window.downloadLogsBlobInBrowser = async () => {\n        // Have to null check twice becquse there is no guarantee\n        // this.logChunkController.downloadLogsBlobInBrowser is always truthy\n        if (this.logChunkController?.downloadLogsBlobInBrowser) {\n          this.logChunkController?.downloadLogsBlobInBrowser({\n            clientId: await this.crypto.getClientId(),\n          });\n        }\n      };\n    }\n\n    this.logger = generateChildLogger(logger, this.name);\n    this.heartbeat = new HeartBeat();\n    this.crypto = new Crypto(this, this.logger, opts?.keychain);\n    this.history = new JsonRpcHistory(this, this.logger);\n    this.expirer = new Expirer(this, this.logger);\n    this.storage = opts?.storage\n      ? opts.storage\n      : new KeyValueStorage({ ...CORE_STORAGE_OPTIONS, ...opts?.storageOptions });\n    this.relayer = new Relayer({\n      core: this,\n      logger: this.logger,\n      relayUrl: this.relayUrl,\n      projectId: this.projectId,\n    });\n    this.pairing = new Pairing(this, this.logger);\n    this.verify = new Verify(this.projectId || \"\", this.logger);\n    this.echoClient = new EchoClient(this.projectId || \"\", this.logger);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  // ---------- Public ----------------------------------------------- //\n\n  public async start() {\n    if (this.initialized) return;\n    await this.initialize();\n  }\n\n  public async getLogsBlob() {\n    return this.logChunkController?.logsToBlob({\n      clientId: await this.crypto.getClientId(),\n    });\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on = (name: any, listener: any) => {\n    return this.events.on(name, listener);\n  };\n\n  public once = (name: any, listener: any) => {\n    return this.events.once(name, listener);\n  };\n\n  public off = (name: any, listener: any) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener = (name: any, listener: any) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.crypto.init();\n      await this.history.init();\n      await this.expirer.init();\n      await this.relayer.init();\n      await this.heartbeat.init();\n      await this.pairing.init();\n      this.initialized = true;\n      this.logger.info(`Core Initialization Success`);\n    } catch (error) {\n      this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, error);\n      this.logger.error((error as any).message);\n      throw error;\n    }\n  }\n}\n","import { Core as WalletConnectCore } from \"./core\";\n\nexport * from \"./constants\";\nexport * from \"./controllers\";\n\nexport const Core = WalletConnectCore;\nexport default WalletConnectCore;\n"],"names":["fromString","from","basex","decode","encode","identity","varint","varint.encodingLength","varint.encodeTo","Digest.create","base2","base8","base10","base16","base32","base36","base64","base256emoji","bases","ONE_DAY","SIX_HOURS","ONE_SECOND","THIRTY_DAYS","FIVE_SECONDS","THIRTY_SECONDS","core","logger","KEYCHAIN_CONTEXT","KEYCHAIN_STORAGE_VERSION","CORE_STORAGE_PREFIX","keychain","tag","key","message","getInternalError","generateChildLogger","getLoggerContext","mapToObj","objToMap","CRYPTO_CONTEXT","seed","keyPair","relayAuth","generateKeyPairUtil","aud","sub","generateRandomBytes32","ttl","CRYPTO_JWT_TTL","selfPublicKey","peerPublicKey","overrideTopic","selfPrivateKey","symKey","deriveSymKey","topic","hashKey","publicKey","payload","opts","params","validateEncoding","safeJsonStringify","isTypeOneEnvelope","type","senderPublicKey","encrypt","encoded","validateDecoding","decrypt","safeJsonParse","error","deserialized","deserialize","decodeTypeByte","toString","BASE16","KeyChain","privateKey","CRYPTO_CLIENT_SEED","e","IMessageTracker","MESSAGES_CONTEXT","MESSAGES_STORAGE_VERSION","messages","hash","hashMessage","IPublisher","relayer","EventEmitter","PUBLISHER_CONTEXT","toMiliseconds","ONE_MINUTE","_a","PUBLISHER_DEFAULT_TTL","relay","getRelayProtocolName","prompt","id","getBigIntRpcId","failedPublishMessage","startPublish","result","attempts","createExpiringPromise","resolve","RELAYER_EVENTS","event","listener","_b","_c","_d","request","getRelayProtocolApi","isUndefined","HEARTBEAT_EVENTS","ids","remaining","x","ISubscriber","SubscriberTopicMap","SUBSCRIBER_CONTEXT","SUBSCRIBER_STORAGE_VERSION","label","reject","watch","Watch","interval","PENDING_SUB_RESOLUTION_TIMEOUT","reason","getSdkError","err","subscriptions","s","__spreadProps","__spreadValues","subscription","SUBSCRIBER_EVENTS","numOfBatches","i","batch","persisted","isValidArray","response","pendingSubscriptions","createdEvent","eventName","deletedEvent","IRelayer","RELAYER_CONTEXT","requestPromise","onDisconnect","RELAYER_PROVIDER_EVENTS","res","isNode","pino","getDefaultLoggerOptions","RELAYER_DEFAULT_LOGGER","MessageTracker","Subscriber","Publisher","RELAYER_DEFAULT_RELAY_URL","getBundleId","RELAYER_FAILOVER_RELAY_URL","RELAYER_TRANSPORT_CUTOFF","resolvePromise","onSubCreated","relayUrl","isOnline","sortedMessages","a","b","_e","auth","JsonRpcProvider","WsConnection","formatRelayRpcUrl","RELAYER_SDK_VERSION","messageEvent","exists","isJsonRpcRequest","RELAYER_SUBSCRIBER_SUFFIX","publishedAt","isJsonRpcResponse","formatJsonRpcResult","lastConnectedState","subscribeToNetworkChange","connected","RELAYER_RECONNECT_TIMEOUT","n","u","h","IStore","name","storagePrefix","getKey","STORE_STORAGE_VERSION","value","isProposalStruct","isSessionStruct","filter","isEqual","update","PAIRING_CONTEXT","PAIRING_STORAGE_VERSION","TYPE_1","methods","expiry","calcExpiry","FIVE_MINUTES","RELAYER_DEFAULT_PROTOCOL","pairing","uri","formatUri","expiryTimestamp","parseUri","existingPairing","PAIRING_EVENTS","done","createDelayedPromise","engineEvent","metadata","method","formatJsonRpcRequest","PAIRING_RPC_OPTS","record","formatJsonRpcError","expirerHasDeleted","expiredPairings","isExpired","resMethod","_topic","isJsonRpcResult","isJsonRpcError","isValidParams","isValidUrl","isValidString","Store","EXPIRER_EVENTS","parseExpirerTarget","IJsonRpcHistory","HISTORY_CONTEXT","HISTORY_STORAGE_VERSION","chainId","HISTORY_EVENTS","requests","requestEvent","records","deleted","IExpirer","EXPIRER_CONTEXT","EXPIRER_STORAGE_VERSION","expiration","target","formatTopicTarget","formatIdTarget","expirations","expiredEvent","IVerify","projectId","VERIFY_CONTEXT","isReactNative","isBrowser","verifyUrl","VERIFY_FALLBACK_SERVER","attestationId","url","timeout","iframeOnLoadResolve","onMessage","existingIframe","iframe","_","VERIFY_SERVER","TRUSTED_VERIFY_URLS","timer","IEchoClient","ECHO_CONTEXT","clientId","token","notificationType","enableEncrypted","echoUrl","ECHO_URL","fetch","Core","ICore","CORE_PROTOCOL","CORE_VERSION","CORE_CONTEXT","loggerOptions","CORE_DEFAULT","chunkLoggerController","generatePlatformLogger","HeartBeat","Crypto","JsonRpcHistory","Expirer","KeyValueStorage","CORE_STORAGE_OPTIONS","Relayer","Pairing","Verify","EchoClient","WALLETCONNECT_CLIENT_ID","WalletConnectCore"],"mappings":"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"}